# HOST监听端口,容器部署时为0.0.0.0，启动镜像时会替换为pod ip
Host="0.0.0.0"
Port=10000

ServerName = "MyService"
# EtcdHost etcd部署地址ip
# etcd如果部署到集群里面，填etcd的server名称，仅限集群内访问
EtcdHost="etcd-cluster-client"
#EtcdHost="127.0.0.1"
EtcdPort=2379
#
#
#<source>
#  @type tcp
#  tag tcp.events # required
#  <parse>
#    @type json
#  </parse>
#  port 5170   # optional. 5170 by default
#  bind 0.0.0.0 # optional. 0.0.0.0 by default
#</source>
#<match **>
#@type file
#  path /fluentd/log/micro_framework
#</match>
#docker run  -p 5170:5170 -v /tmp/fluent:/fluentd/etc -v /tmp/log/fluent:/fluentd/log/micro_framework -e FLUENTD_CONF=fluentd.conf fluent/fluentd:v1.6-debian-1
FluentHost="10.249.155.239"
FluentPort=5170 

#Zipkin  docker run -d -p 9411:9411 -p 9410:9410 openzipkin/zipkin
# http://127.0.0.1:9411/zipkin/
ZipkinHTTPEndpoint="http://10.249.155.239:9411/api/v1/spans"	
# ConcurrencyLimit服务限流 
ConcurrencyLimit=10

# Metric打点间隔时间(s)
MetricTime = 0
# 日志路径映射到tail -f /tmp/log/micro_framework.log
LogPath="/tmp/micro_framework.log"

[UserService] 
	# 数据库配置
	UserDB = "root:test@tcp(mysql-svc:3306)/grpc?charset=utf8&parseTime=true&loc=Local&timeout=3s"
	
[ProductService]
	# 数据库配置
	ProductDB = "root:test@tcp(mysql-svc:3306)/grpc?charset=utf8&parseTime=true&loc=Local&timeout=3s"

[BalanceService]
	# 数据库配置
	BalanceDB = "root:test@tcp(mysql-svc:3306)/grpc?charset=utf8&parseTime=true&loc=Local&timeout=3s"

[OrderService]
	# 数据库配置
	OrderDB = "root:test@tcp(mysql-svc:3306)/grpc?charset=utf8&parseTime=true&loc=Local&timeout=3s"
	# 用户管理  单集群时为上面的ServerName，多集群时为域名
	UserService = "MyService"
	# 商品管理,集群时为上面的ServerName，多集群时为域名
	ProductService = "MyService"
	# 结算管理,集群时为上面的ServerName，多集群时为域名
	BalanceService = "MyService"
